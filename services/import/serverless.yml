service: vlad-ostk-import
frameworkVersion: '3'

plugins:
  - serverless-auto-swagger
  - serverless-plugin-typescript

custom:
  region: eu-west-1
  uploadedBucket: angular-shopping-uploaded
  uploadedBucketPrefix: uploaded

provider:
  name: aws
  runtime: nodejs14.x
  region: ${self:custom.region}
  stage: dev
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: 'request'
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:vlad-ostk-authorization-dev-basicAuthorizer
        resultTtlInSeconds: 0
        enableSimpleResponses: true
        payloadVersion: '2.0'
        identitySource: $request.header.Authorization
  environment:
    region: ${self:custom.region}
    uploadedBucket: ${self:custom.uploadedBucket}
    uploadedBucketPrefix: ${self:custom.uploadedBucketPrefix}
    sqsQueueUrl:
      'Fn::ImportValue': 'CatalogItemsQueueUrl'

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - s3:*
      Resource:
        - arn:aws:s3:::${self:custom.uploadedBucket}/*
    - Effect: 'Allow'
      Action:
        - sqs:*
      Resource:
        'Fn::ImportValue': 'CatalogItemsQueueArn'

functions:
  importProductsFile:
    handler: ./import-products-file/import-products-file.importProductsFileHandler
    events:
      - httpApi:
          path: /import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer

  importFileParser:
    handler: ./import-file-parser/import-file-parser.importFileParserHandler
    events:
      - s3:
          bucket: ${self:custom.uploadedBucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${self:custom.uploadedBucketPrefix}/
          existing: true
