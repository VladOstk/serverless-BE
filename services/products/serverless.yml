service: vlad-ostk-products
frameworkVersion: '3'

plugins:
  - serverless-auto-swagger
  - serverless-plugin-typescript

custom:
  region: eu-west-1
  productsTable: Products
  stocksTable: Stocks

provider:
  name: aws
  runtime: nodejs14.x
  region: ${self:custom.region}
  stage: dev
  environment:
    productsTable: ${self:custom.productsTable}
    stocksTable: ${self:custom.stocksTable}
    region: ${self:custom.region}
    snsArn:
      Ref: SNSTopic
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        Fn::GetAtt:
          - ${self:custom.productsTable}
          - Arn
    - Effect: 'Allow'
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource:
        Fn::GetAtt:
          - ${self:custom.stocksTable}
          - Arn
    - Effect: 'Allow'
      Action:
        - sns:*
      Resource:
        Ref: SNSTopic
functions:
  getProductsList:
    handler: ./get-products-list/get-products-list.getProductsListHandler
    events:
      - http:
          path: /products
          method: get
  getProductById:
    handler: ./get-product-by-id/get-product-by-id.getProductByIdHandler
    events:
      - http:
          path: /products/{productId}
          method: get
  addProduct:
    handler: ./add-product/add-product.addProductHandler
    events:
      - http:
          path: /products
          method: post
  catalogBatchProcess:
    handler: ./catalog-batch-process/catalog-batch-process.catalogBatchProcessHandler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn

resources:
  Resources:
    Products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.productsTable}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stocksTable}
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalog-items-queue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: product-added-topic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: vladjavaacc@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
  Outputs:
    CatalogItemsQueueArn:
      Value:
        Fn::GetAtt:
          - CatalogItemsQueue
          - Arn
      Export:
        Name: CatalogItemsQueueArn
    CatalogItemsQueueUrl:
      Value:
        Ref: CatalogItemsQueue
      Export:
        Name: CatalogItemsQueueUrl
